<included>

   <property name="appName"           value="${CONTEXT_NAME}" />
   <property name="logFileDir"        value="<%= @catalina_home %>/logs" />

   <property name="ignoredStackTrace" value="
      sun.reflect,
      net.sourceforge.stripes,
      org.stripesstuff,
      java.lang.reflect,
      java.lang.Thread.run,
      java.util.concurrent,
      javax.servlet,
      javax.el.BeanELResolver,
      org.apache.coyote,
      org.apache.el,
      org.apache.jasper,
      org.apache.catalina,
      org.apache.ibatis,
      org.apache.tomcat,
      org.postgresql,
      com.googlecode.webutilities,
      com.google.common.io,
      com.google.common.reflect,
      runkeeper.api.SetCharacterEncodingFilter,
      runkeeper.web.SetCharacterEncodingFilter,
      runkeeper.web.filters,
      ch.qos.logback,
      org.tuckey.web.filters,
      com.thetransactioncompany.cors,
      org.apache.tomcat.util,
      com.fasterxml.jackson
   "/>

   <property name="logPattern" value="{%thread} [%level] %logger{0} - %m {mdc.uuid=%X{mdc.uuid:-null}, user.id=%X{user.id:-null}}%n%rEx{full,${ignoredStackTrace}}" />
   <property name="filePattern" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] %cn ${logPattern}" />

   <!--********************************************************************************************-->
   <!-- Define our appenders                                                                       -->
   <!--********************************************************************************************-->

   <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
      <encoder>
         <pattern>${filePattern}</pattern>
      </encoder>
   </appender>

   <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <file>${logFileDir}/logback.${appName}.log</file>
      <encoder>
         <pattern>${filePattern}</pattern>
      </encoder>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         <fileNamePattern>${logFileDir}/logback.${appName}.%d{yyyy-MM-dd-HH}.log.gz</fileNamePattern>
         <cleanHistoryOnStart>true</cleanHistoryOnStart>
         <maxHistory>24</maxHistory>
      </rollingPolicy>
   </appender>

   <appender name="NEWRELIC" class="fitnesskeeper.core.logging.NewRelicAppender">
       <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
           <level>ERROR</level>
       </filter>
   </appender>

   <appender name="ERRORS_ANALYTICS" class="fitnesskeeper.core.logging.ErrorAnalyticsLogAppender">
       <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
           <level>ERROR</level>
       </filter>
   </appender>

   <appender name="ANALYTICS_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <file>${logFileDir}/analytics-logback/${appName}_events.log</file>
      <encoder>
         <pattern>%msg%n</pattern>
      </encoder>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         <fileNamePattern>${logFileDir}/analytics-logback/${appName}_events.%d{yyyy-MM-dd-HH}.log.gz</fileNamePattern>
         <maxHistory>24</maxHistory>
      </rollingPolicy>
   </appender>

   <appender name="ANALYTICS_ENGINEERING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <file>${logFileDir}/analytics-logback/engineering/${appName}_events_engineering.log</file>
      <encoder>
         <pattern>%msg%n</pattern>
      </encoder>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
         <fileNamePattern>${logFileDir}/analytics-logback/engineering/${appName}_events_engineering.%d{yyyy-MM-dd-HH}.log.gz</fileNamePattern>
         <maxHistory>24</maxHistory>
      </rollingPolicy>
   </appender>

   <!-- Sometimes we might run code without an application context, i.e. unit tests, or if someone forgets to setup -->
   <if condition='property("appName").contains("default")'>
      <then>
         <property name="appLogAppenderRef" value="STDOUT" />
      </then>
      <else>
         <property name="appLogAppenderRef" value="FILE" />
      </else>
   </if>

   <!--********************************************************************************************-->
   <!-- Unless otherwise specified all loggers will use the root logger level                      -->
   <!--********************************************************************************************-->

   <root level="INFO">
      <appender-ref ref="${appLogAppenderRef}" />

<%- if @tier != "loadtest" -%>
      <appender-ref ref="ERRORS_ANALYTICS" />
<%- end -%>

<%- if @tier == "production" -%>
      <appender-ref ref="NEWRELIC" />
<%- end -%>
   </root>

   <!--********************************************************************************************-->
   <!-- Control logging for our own code                                                           -->
   <!--********************************************************************************************-->

<%- if @tier != "loadtest" -%>
   <logger name="fitnesskeeper" level="DEBUG"/>
   <logger name="runkeeper"     level="DEBUG"/>
<%- end -%>

<%- if @tier == "loadtest" -%>
   <logger name="fitnesskeeper" level="WARN"/>
   <logger name="runkeeper"     level="WARN"/>
<%- end -%>

   <!--********************************************************************************************-->
   <!-- Analytics logging                                                                          -->
   <!--********************************************************************************************-->

   <!-- Note that additivity is set to false here -->
   <!-- this is important because it stops analytics logs from going to appenders in the root logger -->
   <logger name="analytics" additivity="false" level="INFO">
<%- if @tier != "loadtest" -%>
      <appender-ref ref="ANALYTICS_FILE" />
<%- end -%>
   </logger>

  <logger name="analytics-engineering" additivity="false" level="INFO">
      <appender-ref ref="ANALYTICS_ENGINEERING_FILE" />
  </logger>

   <!-- this thing gets noisy because we override a class in the nevado JMS lib which has logging -->
   <logger name="runkeeper.jms.connector.AmazonAwsSQSConnector" level="OFF"/>

   <!--********************************************************************************************-->
   <!-- Control logging for other stuff which we do not want to use the default root logging level -->
   <!--********************************************************************************************-->

   <logger name="net.sourceforge.stripes" level="OFF"/>
   <logger name="org.mybatis" level="OFF"/>
   <logger name="org.apache.commons.httpclient" level="OFF"/>
   <logger name="com.amazonaws" level="ERROR"/>

</included>
