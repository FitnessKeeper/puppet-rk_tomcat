<included>

   <property name="appName"           value="${CONTEXT_NAME}" />
   <property name="logFileDir"        value="<%= @catalina_home %>/logs" />
   <property name="s3DirPrefix"       value="<%= @tier %>" />

   <property name="ignoredStackTrace" value="
      sun.reflect,
      net.sourceforge.stripes,
      org.stripesstuff,
      java.lang.reflect,
      java.util.concurrent,
      java.lang.Thread.run,
      java.util.concurrent,
      javax.servlet,
      javax.el.BeanELResolver,
      org.apache.coyote,
      org.apache.el,
      org.apache.jasper,
      org.apache.catalina,
      org.apache.ibatis,
      org.apache.tomcat,
      org.postgresql,
      com.googlecode.webutilities,
      com.google.common.io,
      com.google.common.reflect,
      runkeeper.api.SetCharacterEncodingFilter,
      runkeeper.web.SetCharacterEncodingFilter,
      runkeeper.web.filters,
      ch.qos.logback,
      org.tuckey.web.filters,
      com.thetransactioncompany.cors,
      org.apache.tomcat.util
   "/>

   <property name="filePattern"       value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] %cn {%thread} [%level] %logger{0} - %m {mdc.uuid=%X{mdc.uuid:-null}, user.legacy_id=%X{user.legacy_id:-null}}%n%rEx{full,${ignoredStackTrace}}" />
   <property name="logentriesPattern" value="%cn {%thread} [%level] %logger{0} - %m {mdc.uuid=%X{mdc.uuid:-null}, user.legacy_id=%X{user.legacy_id:-null}} [<%= @serverAlias %>]%n%rEx{full,${ignoredStackTrace}}" />

   <!--********************************************************************************************-->
   <!-- Define our appenders                                                                       -->
   <!--********************************************************************************************-->

   <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
      <encoder>
         <pattern>${filePattern}</pattern>
      </encoder>
   </appender>

   <!-- Sometimes we might run code without an application context, i.e. unit tests, or if someone forgets to setup -->
   <if condition='property("appName").contains("default")'>
      <then>
         <property name="appenderRef" value="STDOUT" />
      </then>
      <else>
         <property name="appenderRef" value="FILE" />

         <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${logFileDir}/logback.${appName}.log.txt</file>
            <append>true</append>
            <encoder>
               <pattern>${filePattern}</pattern>
            </encoder>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
               <fileNamePattern>${logFileDir}/logback.${appName}.log.%d{yyyy-MM-dd}.txt</fileNamePattern>
               <cleanHistoryOnStart>true</cleanHistoryOnStart>
               <maxHistory>7</maxHistory>
            </rollingPolicy>
         </appender>

      </else>
   </if>

   <appender name="NEWRELIC" class="fitnesskeeper.core.logging.NewRelicAppender">
       <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
           <level>ERROR</level>
       </filter>
   </appender>

   <appender name="ANALYTICS_FILE" class="com.logpig.mweagle.rolling.S3RollingFileAppender">
      <file>${logFileDir}/analytics-logback/${appName}_events.log</file>
      <encoder>
         <pattern>%msg%n</pattern>
      </encoder>
      
      <%# TODO: Remove these keys when we switch to use IAM roles after AWS migration -%>
      <accessKey>AKIAINEPMXG4YZQD6W3A</accessKey>
      <secretKey>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</secretKey>
      
      <bucketName>rk-etl-data</bucketName>
      <bucketDir>analytics-logback/${s3DirPrefix}/${appName}</bucketDir>
      
      <rollingPolicy class="com.logpig.mweagle.rolling.S3TimeBasedRollingPolicy">
         <fileNamePattern>${logFileDir}/analytics-logback/${appName}_events.%d{yyyy-MM-dd-HH}.log.gz</fileNamePattern>
      </rollingPolicy>
   </appender>

   <appender name="ANALYTICS_LOGENTRIES" class="com.logentries.logback.LogentriesAppender">
       <Debug>False</Debug>
       <Token><%= @logentries_analytics_token %></Token>
       <Ssl>False</Ssl>
       <facility>USER</facility>
       <layout>
          <pattern><%= @log_identifier %> %cn: %msg%n</pattern>
       </layout>
   </appender>

   <appender name="APPLOGS_LOGENTRIES" class="com.logentries.logback.LogentriesAppender">
<%- if (@tier == "production" && ! @artifacts.keys.include?("admin")) -%>
       <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
          <evaluator> <!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
             <expression>try { Class.forName("fitnesskeeper.core.logging.InternalUsersFilter"); return true;  } catch (Exception ex) { return false; }</expression>
          </evaluator>
          <OnMatch>NEUTRAL</OnMatch>
          <OnMismatch>DENY</OnMismatch>
       </filter>
       <filter class="ch.qos.logback.classic.filter.LevelFilter">
          <level>WARN</level>
          <onMatch>ACCEPT</onMatch>
          <onMismatch>NEUTRAL</onMismatch>
       </filter>
       <filter class="ch.qos.logback.classic.filter.LevelFilter">
          <level>ERROR</level>
          <onMatch>ACCEPT</onMatch>
          <onMismatch>NEUTRAL</onMismatch>
       </filter>
       <filter class="fitnesskeeper.core.logging.InternalUsersFilter" />
<%- end -%>
       <Debug>False</Debug>
       <Token><%= @logentries_applogs_token %></Token>
       <Ssl>False</Ssl>
       <facility>USER</facility>
       <layout>
          <pattern>${logentriesPattern}</pattern>
       </layout>
   </appender>

   <!--********************************************************************************************-->
   <!-- Unless otherwise specified all loggers will use the root logger level                      -->
   <!--********************************************************************************************-->

   <root level="INFO">
      <appender-ref ref="${appenderRef}" />
      <appender-ref ref="APPLOGS_LOGENTRIES" />
<%- if @tier == "production" -%>
      <appender-ref ref="NEWRELIC" />
<%- end -%>
   </root>

   <!--********************************************************************************************-->
   <!-- Control logging for our own code                                                           -->
   <!--********************************************************************************************-->

   <logger name="fitnesskeeper" level="DEBUG"/>
   <logger name="runkeeper"     level="DEBUG"/>

   <logger name="analytics">
      <level value="INFO"/>
      <appender-ref ref="ANALYTICS_FILE" />
<%- if @tier == "staging" -%>
      <appender-ref ref="ANALYTICS_LOGENTRIES"/>
<%- end -%>
   </logger>

<%- if @tier == "production" -%>
   <logger name="trace-analytics">
      <level value="TRACE"/>
      <appender-ref ref="ANALYTICS_LOGENTRIES" />
   </logger>
<%- end -%>

   <!-- this thing gets noisy because we override a class in the nevado JMS lib which has logging -->
   <logger name="runkeeper.jms.connector.AmazonAwsSQSConnector" level="OFF"/>

   <!--********************************************************************************************-->
   <!-- Control logging for other stuff which we do not want to use the default root logging level -->
   <!--********************************************************************************************-->

   <logger name="net.sourceforge.stripes" level="OFF"/>
   <logger name="org.mybatis" level="OFF"/>
   <logger name="org.apache.commons.httpclient" level="OFF"/>
   <logger name="com.amazonaws" level="ERROR"/>

</included>
